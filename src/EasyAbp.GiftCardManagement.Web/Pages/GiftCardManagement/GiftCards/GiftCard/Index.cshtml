@page
@using EasyAbp.GiftCardManagement.Authorization
@using EasyAbp.GiftCardManagement.Localization
@using EasyAbp.GiftCardManagement.Web.Pages.GiftCardManagement.GiftCards.GiftCard
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@inject IHtmlLocalizer<GiftCardManagementResource> L
@inject IAuthorizationService Authorization
@inject IPageLayout PageLayout
@model IndexModel
@{
    PageLayout.Content.Title = Model.Template.Name + " - " + L["GiftCard"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:GiftCardTemplate"].Value);
    PageLayout.Content.BreadCrumb.Add(L["Menu:GiftCardManagement"].Value);
    PageLayout.Content.MenuItemName = "EasyAbpGiftCardManagementGiftCardTemplate";
}

@section scripts
{
    <abp-script src="/Pages/GiftCardManagement/GiftCards/GiftCard/index.js" />
}
@section styles
{
    <abp-style src="/Pages/GiftCardManagement/GiftCards/GiftCard/index.css"/>
}
@section content_toolbar
{
    @if (await Authorization.IsGrantedAsync(GiftCardManagementPermissions.GiftCards.Create))
    {
        <abp-button id="NewGiftCardButtonInBatch"
                    text="@L["CreateGiftCardInBatch"].Value"
                    icon="plus"
                    size="Small"
                    button-type="Primary"/>
        <abp-button id="NewGiftCardButton"
                    text="@L["CreateGiftCard"].Value"
                    icon="plus"
                    size="Small"
                    button-type="Primary"/>
    }
}

<script>
    let templateId = '@Model.Template.Id';
</script>

<abp-card>
    <abp-card-body>
        <abp-table striped-rows="true" id="GiftCardTable" class="nowrap">
            <thead>
            <tr>
                <th>@L["Actions"]</th>
                <th>@L["GiftCardCode"]</th>
                <th>@L["GiftCardExpiration"]</th>
                <th>@L["GiftCardConsumptionTime"]</th>
            </tr>
            </thead>
        </abp-table>
    </abp-card-body>
</abp-card>